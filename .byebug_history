exit
params
exit
params
c
contact_params[:addresses_attributes]
exit
address_params
exit
address_params
c
address_params
caddress_params
c
@contact.addresses.build(params[:contact][:addresses_attributes])
@contact
params[:contact][:addresses_attributes]
params
address_params
c
contact.addresses.count
contact.addresses
contact
c
Address.new(value)
Address.new(values)
@contact.addresses.new(value)
@contact.addresses.build(value)
value
values
key
c
params[:contact][:addresses_attributes].each {|key,value| @contact.addresses.build(value)}
params[:contact][:addresses_attributes]
n
c
params
exit
exception
n
params[:contact][:addresses_attributes].present?
n
c
params.require(:contact).permit(:first_name, :last_name, :email, :addresses_attributes => [:address, :country])
params.require(:contact).permit(:first_name, :last_name, :email)
contact_params
exit
params[:contact]
params
contact_params
exit
params[:contact][:addresses_attributes].class
params[:contact][:addresses_attributes]
params[:addresses_attributes]
params
